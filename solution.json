{
  "$schema": "https://schema.management.azure.com/schemas/2018-05-01/subscriptionDeploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "metadata": {
    "_generator": {
      "name": "bicep",
      "version": "0.18.4.5664",
      "templateHash": "6503474665800412367"
    }
  },
  "parameters": {
    "avdGroup": {
      "type": "string"
    },
    "time": {
      "type": "string",
      "defaultValue": "[utcNow()]"
    }
  },
  "variables": {
    "$fxv#0": "{\r\n  \"name\": \"policy-set-deploy-zta-avd\",\r\n  \"type\": \"Microsoft.Authorization/policySetDefinitions\",\r\n  \"apiVersion\": \"2021-06-01\",\r\n  \"scope\": null,\r\n  \"properties\": {\r\n    \"policyType\": \"Custom\",\r\n    \"displayName\": \"Custom - Deploy ZTA Policies to AVD Landing Zone.\",\r\n    \"description\": \"This policy set deploys ZTA Policies to AVD Landing Zone.\",\r\n    \"metadata\": {\r\n      \"version\": \"1.1.0\",\r\n      \"category\": \"Zero Trust\"\r\n    },\r\n    \"policyDefinitions\": [\r\n      {\r\n        \"policyDefinitionId\": \"/providers/Microsoft.Authorization/policyDefinitions/4733ea7b-a883-42fe-8cac-97454c2a9e4a\"\r\n      },\r\n      {\r\n        \"policyDefinitionId\": \"/providers/Microsoft.Authorization/policyDefinitions/6edd7eda-6dd8-40f7-810d-67160c639cd9\"\r\n      },\r\n      {\r\n        \"policyDefinitionId\": \"/providers/Microsoft.Authorization/policyDefinitions/308fbb08-4ab8-4e67-9b29-592e93fb94fa\"\r\n      },\r\n      {\r\n        \"policyDefinitionId\": \"/providers/Microsoft.Authorization/policyDefinitions/4da35fc9-c9e7-4960-aec9-797fe7d9051d\"\r\n      },\r\n      {\r\n        \"policyDefinitionId\": \"/providers/Microsoft.Authorization/policyDefinitions/b2982f36-99f2-4db5-8eff-283140c09693\"\r\n      },\r\n      {\r\n        \"policyDefinitionId\": \"/providers/Microsoft.Authorization/policyDefinitions/6fac406b-40ca-413b-bf8e-0bf964659c25\"\r\n      },\r\n      {\r\n        \"policyDefinitionId\": \"/providers/Microsoft.Authorization/policyDefinitions/34c877ad-507e-4c82-993e-3452a6e0ad3c\"\r\n      },\r\n      {\r\n        \"policyDefinitionId\": \"/subscriptions/e121d000-54c3-45ff-bd0e-afd6686e8c1e/providers/Microsoft.Authorization/policyDefinitions/StorageRBAC\"\r\n      },\r\n      {\r\n        \"policyDefinitionId\": \"/providers/Microsoft.Authorization/policyDefinitions/9df61aa2-b10c-4efe-aae0-295cc936930b\"\r\n      },\r\n      {\r\n        \"policyDefinitionId\": \"/providers/Microsoft.Authorization/policyDefinitions/1c30f9cd-b84c-49cc-aa2c-9288447cc3b3\"\r\n      },\r\n      {\r\n        \"policyDefinitionId\": \"/providers/Microsoft.Authorization/policyDefinitions/97566dd7-78ae-4997-8b36-1c7bfe0d8121\"\r\n      },\r\n      {\r\n        \"policyDefinitionId\": \"/providers/Microsoft.Authorization/policyDefinitions/1cb4d9c2-f88f-4069-bee0-dba239a57b09\"\r\n      },\r\n      {\r\n        \"policyDefinitionId\": \"/providers/Microsoft.Authorization/policyDefinitions/86b3d65f-7626-441e-b690-81a8b71cff60\"\r\n      },\r\n      {\r\n        \"policyDefinitionId\": \"/providers/Microsoft.Authorization/policyDefinitions/b0f33259-77d7-4c9e-aac6-3aabcfae693c\"\r\n      },\r\n      {\r\n        \"policyDefinitionId\": \"/providers/Microsoft.Authorization/policyDefinitions/81b3ccb4-e6e8-4e4a-8d05-5df25cd29fd4\"\r\n      },\r\n      {\r\n        \"policyDefinitionId\": \"/providers/Microsoft.Authorization/policyDefinitions/931e118d-50a1-4457-a5e4-78550e086c52\"\r\n      },\r\n      {\r\n        \"policyDefinitionId\": \"/providers/Microsoft.Authorization/policyDefinitions/e3e008c3-56b9-4133-8fd7-d3347377402a\"\r\n      },\r\n      {\r\n        \"policyDefinitionId\": \"/providers/Microsoft.Authorization/policyDefinitions/c25dcf31-878f-4eba-98eb-0818fdc6a334\"\r\n      },\r\n      {\r\n        \"policyDefinitionId\": \"/providers/Microsoft.Authorization/policyDefinitions/a22065a3-3b04-46ff-b84c-2d30e5c300d0\"\r\n      },\r\n      {\r\n        \"policyDefinitionId\": \"/providers/Microsoft.Authorization/policyDefinitions/87ac3038-c07a-4b92-860d-29e270a4f3cd\"\r\n      },\r\n      {\r\n        \"policyDefinitionId\": \"/providers/Microsoft.Authorization/policyDefinitions/ca950cd7-02f7-422e-8c23-91ff40f169c1\"\r\n      }\r\n    ]\r\n  }\r\n}",
    "policyName": "StorageRBACAudit",
    "policyDisplayName": "Audits Storage Account for Storage File Data SMB Share Elevated Contributor RBAC role for an AVD AD groups",
    "policyDescription": "Audits Storage Account for Storage File Data SMB Share Elevated Contributor RBAC role for an AVD AD group",
    "subscriptionId": "[subscription().subscriptionId]",
    "location": "[deployment().location]",
    "policySet": [
      {
        "deploymentName": "ZTA",
        "libDefinition": "[json(variables('$fxv#0'))]"
      }
    ]
  },
  "resources": [
    {
      "type": "Microsoft.Authorization/policyDefinitions",
      "apiVersion": "2020-09-01",
      "name": "[variables('policyName')]",
      "properties": {
        "displayName": "[variables('policyDisplayName')]",
        "policyType": "Custom",
        "mode": "All",
        "description": "[variables('policyDescription')]",
        "metadata": {
          "category": "Zero Trust"
        },
        "parameters": {},
        "policyRule": {
          "if": {
            "allOf": [
              {
                "field": "type",
                "equals": "Microsoft.Storage/storageAccounts"
              }
            ]
          },
          "then": {
            "effect": "AuditIfNotExists",
            "details": {
              "type": "Microsoft.Authorization/roleAssignments",
              "existenceCondition": {
                "allOf": [
                  {
                    "field": "Microsoft.Authorization/roleAssignments/roleDefinitionId",
                    "equals": "[format('/subscriptions/{0}/providers/Microsoft.Authorization/roleDefinitions/a7264617-510b-434b-a828-9731dc254ea7', variables('subscriptionId'))]"
                  },
                  {
                    "field": "Microsoft.Authorization/roleAssignments/principalId",
                    "equals": "[parameters('avdGroup')]"
                  }
                ]
              }
            }
          }
        }
      }
    },
    {
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2022-09-01",
      "name": "[if(greater(length(format('PolicySetDefini-{0}', parameters('time'))), 64), take(format('AVD-ZTA-Policy-Set-Definition-{0}', parameters('time')), 64), format('AVD-ZTA-Policy-Set-Definition-{0}', parameters('time')))]",
      "subscriptionId": "[variables('subscriptionId')]",
      "location": "[deployment().location]",
      "properties": {
        "expressionEvaluationOptions": {
          "scope": "inner"
        },
        "mode": "Incremental",
        "parameters": {
          "location": {
            "value": "[variables('location')]"
          },
          "name": {
            "value": "[variables('policySet')[0].deploymentName]"
          },
          "description": {
            "value": "[variables('policySet')[0].libDefinition.properties.description]"
          },
          "displayName": {
            "value": "[variables('policySet')[0].libDefinition.properties.displayName]"
          },
          "metadata": {
            "value": "[variables('policySet')[0].libDefinition.properties.metadata]"
          },
          "policyDefinitions": {
            "value": "[variables('policySet')[0].libDefinition.properties.policyDefinitions]"
          }
        },
        "template": {
          "$schema": "https://schema.management.azure.com/schemas/2018-05-01/subscriptionDeploymentTemplate.json#",
          "contentVersion": "1.0.0.0",
          "metadata": {
            "_generator": {
              "name": "bicep",
              "version": "0.18.4.5664",
              "templateHash": "16175402431461753105"
            }
          },
          "parameters": {
            "name": {
              "type": "string",
              "maxLength": 64,
              "metadata": {
                "description": "Required. Specifies the name of the policy Set Definition (Initiative). Maximum length is 64 characters for subscription scope."
              }
            },
            "displayName": {
              "type": "string",
              "defaultValue": "",
              "maxLength": 128,
              "metadata": {
                "description": "Optional. The display name of the Set Definition (Initiative). Maximum length is 128 characters."
              }
            },
            "description": {
              "type": "string",
              "defaultValue": "",
              "metadata": {
                "description": "Optional. The description name of the Set Definition (Initiative)."
              }
            },
            "metadata": {
              "type": "object",
              "defaultValue": {},
              "metadata": {
                "description": "Optional. The Set Definition (Initiative) metadata. Metadata is an open ended object and is typically a collection of key-value pairs."
              }
            },
            "policyDefinitions": {
              "type": "array",
              "metadata": {
                "description": "Required. The array of Policy definitions object to include for this policy set. Each object must include the Policy definition ID, and optionally other properties like parameters."
              }
            },
            "policyDefinitionGroups": {
              "type": "array",
              "defaultValue": [],
              "metadata": {
                "description": "Optional. The metadata describing groups of policy definition references within the Policy Set Definition (Initiative)."
              }
            },
            "parameters": {
              "type": "object",
              "defaultValue": {},
              "metadata": {
                "description": "Optional. The Set Definition (Initiative) parameters that can be used in policy definition references."
              }
            },
            "location": {
              "type": "string",
              "defaultValue": "[deployment().location]",
              "metadata": {
                "description": "Optional. Location deployment metadata."
              }
            },
            "enableDefaultTelemetry": {
              "type": "bool",
              "defaultValue": true,
              "metadata": {
                "description": "Optional. Enable telemetry via a Globally Unique Identifier (GUID)."
              }
            }
          },
          "resources": [
            {
              "condition": "[parameters('enableDefaultTelemetry')]",
              "type": "Microsoft.Resources/deployments",
              "apiVersion": "2021-04-01",
              "name": "[format('pid-47ed15a6-730a-4827-bcb4-0fd963ffbd82-{0}', uniqueString(deployment().name, parameters('location')))]",
              "location": "[parameters('location')]",
              "properties": {
                "mode": "Incremental",
                "template": {
                  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                  "contentVersion": "1.0.0.0",
                  "resources": []
                }
              }
            },
            {
              "type": "Microsoft.Authorization/policySetDefinitions",
              "apiVersion": "2021-06-01",
              "name": "[parameters('name')]",
              "properties": {
                "policyType": "Custom",
                "displayName": "[if(not(empty(parameters('displayName'))), parameters('displayName'), null())]",
                "description": "[if(not(empty(parameters('description'))), parameters('description'), null())]",
                "metadata": "[if(not(empty(parameters('metadata'))), parameters('metadata'), null())]",
                "parameters": "[if(not(empty(parameters('parameters'))), parameters('parameters'), null())]",
                "policyDefinitions": "[parameters('policyDefinitions')]",
                "policyDefinitionGroups": "[if(not(empty(parameters('policyDefinitionGroups'))), parameters('policyDefinitionGroups'), createArray())]"
              }
            }
          ],
          "outputs": {
            "name": {
              "type": "string",
              "metadata": {
                "description": "Policy Set Definition Name."
              },
              "value": "[parameters('name')]"
            },
            "resourceId": {
              "type": "string",
              "metadata": {
                "description": "Policy Set Definition resource ID."
              },
              "value": "[subscriptionResourceId('Microsoft.Authorization/policySetDefinitions', parameters('name'))]"
            }
          }
        }
      },
      "dependsOn": [
        "[subscriptionResourceId('Microsoft.Authorization/policyDefinitions', variables('policyName'))]"
      ]
    }
  ]
}